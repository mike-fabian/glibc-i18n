Process to generate new CTYPE:
1. Download  UnicodeData.txt and DerivedCoreProperties.txt from latest Unicode release. 
2. Make sure you have ctype-gen.sh, gen-unicode-ctype.c and gen-unicode-ctype-dcp.py scripts.
3. $.ctype-gen.sh UnicodeData.txt DerivedCoreProperties.txt "VERSION"
4. It will create "unicode" file
8. New CTYPE is ready in "unicode-ctype" file

Chek backward compatibility:
It is important to see how many characters has been changed in new CTYPE.
1. $./check-backcompatibility.py i18n unicode-ctype > Report  --(Here i18n is existing Unicode ctype file in glibc and "unicode" is generated as above)
2. vi Report

Report file will show give stats of how many characters was present in each group and how many are missing in new CTYPE. Do analysis if required.

Final Patch:
1. Add classes of 'unicode' file into the glibc/localedata/locales/i18n file
2. Update Unicode version and do manual edit if anything

Note:
See backward-compatibility5_1-to-7_0 for more information

